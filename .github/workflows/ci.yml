name: CI - Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  DEVELOPER_DIR: /Applications/Xcode_15.0.app/Contents/Developer
  IOS_VERSION: '17.0'
  XCODE_VERSION: '15.0'

jobs:
  # ========================================
  # Lint and Code Quality
  # ========================================
  lint:
    name: SwiftLint Code Quality
    runs-on: macos-13
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SwiftLint
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/swiftlint
          key: ${{ runner.os }}-swiftlint-${{ hashFiles('.swiftlint.yml') }}
          restore-keys: |
            ${{ runner.os }}-swiftlint-

      - name: Install SwiftLint
        run: |
          brew install swiftlint || brew upgrade swiftlint

      - name: Run SwiftLint
        run: |
          swiftlint --reporter github-actions-logging

      - name: Upload SwiftLint results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: swiftlint-results
          path: swiftlint-results.json
          retention-days: 30

  # ========================================
  # Unit Tests
  # ========================================
  unit-tests:
    name: Unit Tests
    runs-on: macos-13
    timeout-minutes: 30

    strategy:
      matrix:
        scheme: [FuekiWallet]
        destination: ['platform=iOS Simulator,name=iPhone 15 Pro,OS=17.0']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Cache DerivedData
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-deriveddata-${{ hashFiles('**/*.xcodeproj') }}-${{ hashFiles('**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-deriveddata-${{ hashFiles('**/*.xcodeproj') }}-
            ${{ runner.os }}-deriveddata-

      - name: Install dependencies
        run: |
          if [ -f Podfile ]; then
            pod install --repo-update
          fi

      - name: Run unit tests
        run: |
          xcodebuild test \
            -workspace FuekiWallet.xcworkspace \
            -scheme ${{ matrix.scheme }} \
            -destination '${{ matrix.destination }}' \
            -enableCodeCoverage YES \
            -resultBundlePath TestResults/UnitTests.xcresult \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            ONLY_ACTIVE_ARCH=NO \
            | xcpretty --report html --output TestResults/unit-tests.html

      - name: Generate coverage report
        if: always()
        run: |
          xcrun xccov view --report --json TestResults/UnitTests.xcresult > TestResults/coverage.json

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: TestResults/
          retention-days: 30

      - name: Publish test report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: 'TestResults/**/*.xml'
          check_name: Unit Test Results

  # ========================================
  # Integration Tests
  # ========================================
  integration-tests:
    name: Integration Tests
    runs-on: macos-13
    timeout-minutes: 45
    needs: unit-tests

    services:
      mock-api:
        image: mockserver/mockserver:latest
        ports:
          - 1080:1080

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install dependencies
        run: |
          if [ -f Podfile ]; then
            pod install --repo-update
          fi

      - name: Run integration tests
        env:
          TEST_API_ENDPOINT: http://localhost:1080
        run: |
          xcodebuild test \
            -workspace FuekiWallet.xcworkspace \
            -scheme FuekiWallet \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.0' \
            -testPlan IntegrationTests \
            -enableCodeCoverage YES \
            -resultBundlePath TestResults/IntegrationTests.xcresult \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            | xcpretty --report html --output TestResults/integration-tests.html

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: TestResults/
          retention-days: 30

  # ========================================
  # UI Tests
  # ========================================
  ui-tests:
    name: UI Tests
    runs-on: macos-13
    timeout-minutes: 60
    needs: unit-tests

    strategy:
      matrix:
        device:
          - 'iPhone 15 Pro'
          - 'iPhone 15'
          - 'iPad Pro (12.9-inch) (6th generation)'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install dependencies
        run: |
          if [ -f Podfile ]; then
            pod install --repo-update
          fi

      - name: Boot simulator
        run: |
          xcrun simctl boot "${{ matrix.device }}" || true
          xcrun simctl bootstatus "${{ matrix.device }}" -b

      - name: Run UI tests
        run: |
          xcodebuild test \
            -workspace FuekiWallet.xcworkspace \
            -scheme FuekiWallet \
            -destination 'platform=iOS Simulator,name=${{ matrix.device }},OS=17.0' \
            -testPlan UITests \
            -enableCodeCoverage YES \
            -resultBundlePath TestResults/UITests-${{ matrix.device }}.xcresult \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            | xcpretty --report html --output TestResults/ui-tests-${{ matrix.device }}.html

      - name: Upload UI test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results-${{ matrix.device }}
          path: TestResults/
          retention-days: 30

      - name: Upload UI test screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-screenshots-${{ matrix.device }}
          path: ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/Attachments/
          retention-days: 7

  # ========================================
  # Build Validation
  # ========================================
  build:
    name: Build Validation
    runs-on: macos-13
    timeout-minutes: 30
    needs: [lint, unit-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Cache DerivedData
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-build-deriveddata-${{ hashFiles('**/*.xcodeproj') }}-${{ hashFiles('**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-build-deriveddata-

      - name: Install dependencies
        run: |
          if [ -f Podfile ]; then
            pod install --repo-update
          fi

      - name: Build for testing
        run: |
          xcodebuild build-for-testing \
            -workspace FuekiWallet.xcworkspace \
            -scheme FuekiWallet \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.0' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            | xcpretty

      - name: Archive build artifacts
        if: success()
        run: |
          mkdir -p build-artifacts
          cp -R ~/Library/Developer/Xcode/DerivedData/*/Build/Products build-artifacts/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build-artifacts/
          retention-days: 7

  # ========================================
  # Code Coverage Summary
  # ========================================
  coverage:
    name: Code Coverage Report
    runs-on: macos-13
    needs: [unit-tests, integration-tests, ui-tests]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download unit test results
        uses: actions/download-artifact@v4
        with:
          name: unit-test-results
          path: coverage/unit/

      - name: Download integration test results
        uses: actions/download-artifact@v4
        with:
          name: integration-test-results
          path: coverage/integration/
        continue-on-error: true

      - name: Generate combined coverage report
        run: |
          # Merge coverage reports
          echo "Generating combined coverage report..."
          # Add your coverage merge logic here

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/**/*.json
          flags: ios
          name: ios-coverage
          fail_ci_if_error: false
