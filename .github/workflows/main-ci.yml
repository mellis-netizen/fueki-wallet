name: Main Branch CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  XCODE_VERSION: '15.0'
  SWIFT_VERSION: '5.9'

jobs:
  test-and-build:
    name: Test and Build
    runs-on: macos-13
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Cache Swift Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Install Dependencies
        run: |
          brew install swiftlint xcpretty

      - name: Run All Tests
        run: |
          set -o pipefail
          xcodebuild test \
            -scheme FuekiWallet \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.0' \
            -enableCodeCoverage YES \
            -resultBundlePath ./TestResults.xcresult \
            | xcpretty --report html --output scripts/ci/test-report.html

      - name: Generate Coverage Report
        run: |
          xcrun xccov view --report --json ./TestResults.xcresult > scripts/ci/coverage.json
          bash scripts/ci/generate-coverage-report.sh

      - name: Archive for TestFlight
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APP_PASSWORD }}
        run: |
          # This will be enabled when certificates are configured
          # fastlane beta
          echo "Archive step (requires certificates setup)"

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: main-test-results
          path: |
            TestResults.xcresult
            scripts/ci/test-report.html
            scripts/ci/coverage.json
          retention-days: 90

  deploy-testflight:
    name: Deploy to TestFlight
    runs-on: macos-13
    needs: [test-and-build]
    if: github.event_name == 'workflow_dispatch'
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Install Fastlane
        run: |
          brew install fastlane
          fastlane --version

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Import Certificates
        env:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          bash scripts/ci/import-certificates.sh

      - name: Build and Upload to TestFlight
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APP_PASSWORD }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}
        run: |
          fastlane beta

      - name: Notify Slack on Success
        if: success()
        uses: slackapi/slack-github-action@v1
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "✅ TestFlight deployment successful for Fueki Wallet",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*TestFlight Build Deployed*\n\nVersion: ${{ github.ref_name }}\nCommit: ${{ github.sha }}"
                  }
                }
              ]
            }

      - name: Notify Slack on Failure
        if: failure()
        uses: slackapi/slack-github-action@v1
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "❌ TestFlight deployment failed for Fueki Wallet",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*TestFlight Build Failed*\n\nVersion: ${{ github.ref_name }}\nCommit: ${{ github.sha }}\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Logs>"
                  }
                }
              ]
            }
