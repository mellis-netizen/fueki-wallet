name: Play Store Deployment

on:
  push:
    branches: [main, release/*]
    tags:
      - 'v*.*.*'
      - 'v*.*.*-rc*'
  workflow_dispatch:
    inputs:
      track:
        description: 'Release track (internal, alpha, beta, production)'
        required: true
        default: 'internal'
        type: choice
        options:
          - internal
          - alpha
          - beta
          - production
      version:
        description: 'Version name (e.g., 1.0.0)'
        required: true
      version_code:
        description: 'Version code (auto-increment if empty)'
        required: false

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  # ========================================
  # Pre-flight Checks
  # ========================================
  preflight:
    name: Pre-flight Validation
    runs-on: ubuntu-latest
    timeout-minutes: 10

    outputs:
      version: ${{ steps.version.outputs.version }}
      version_code: ${{ steps.version.outputs.version_code }}
      track: ${{ steps.track.outputs.track }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
            VERSION_CODE="${{ github.event.inputs.version_code }}"
          else
            if [[ "${{ github.ref }}" == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/v}
            else
              VERSION=$(cat version.txt 2>/dev/null || echo "1.0.0")
            fi
            VERSION_CODE=${{ github.run_number }}
          fi

          [ -z "$VERSION_CODE" ] && VERSION_CODE=${{ github.run_number }}

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
          echo "Version: $VERSION ($VERSION_CODE)"

      - name: Determine track
        id: track
        run: |
          TRACK="${{ github.event.inputs.track }}"

          if [ -z "$TRACK" ]; then
            if [[ "${{ github.ref }}" == refs/tags/*-rc* ]]; then
              TRACK="beta"
            elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
              TRACK="production"
            else
              TRACK="internal"
            fi
          fi

          echo "track=$TRACK" >> $GITHUB_OUTPUT
          echo "Release track: $TRACK"

      - name: Validate secrets
        run: |
          if [ -z "${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}" ]; then
            echo "PLAY_STORE_SERVICE_ACCOUNT_JSON secret not set"
            exit 1
          fi

          if [ -z "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
            echo "ANDROID_KEYSTORE_BASE64 secret not set"
            exit 1
          fi

          if [ -z "${{ secrets.ANDROID_KEY_ALIAS }}" ]; then
            echo "ANDROID_KEY_ALIAS secret not set"
            exit 1
          fi

          echo "All required secrets configured"

  # ========================================
  # Build and Sign APK/AAB
  # ========================================
  build:
    name: Build Signed Bundle
    runs-on: ubuntu-latest
    needs: preflight
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: npm ci

      - name: Decode keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/release.keystore

      - name: Create keystore.properties
        working-directory: android
        env:
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
        run: |
          cat > keystore.properties << EOF
          storePassword=$STORE_PASSWORD
          keyPassword=$KEY_PASSWORD
          keyAlias=$KEY_ALIAS
          storeFile=app/release.keystore
          EOF

      - name: Update version in build.gradle
        working-directory: android/app
        run: |
          sed -i "s/versionCode .*/versionCode ${{ needs.preflight.outputs.version_code }}/" build.gradle
          sed -i "s/versionName .*/versionName \"${{ needs.preflight.outputs.version }}\"/" build.gradle

      - name: Build Release Bundle
        working-directory: android
        run: |
          ./gradlew bundleRelease --no-daemon --stacktrace

      - name: Build Release APK
        working-directory: android
        run: |
          ./gradlew assembleRelease --no-daemon --stacktrace

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: fueki-wallet-${{ needs.preflight.outputs.version }}-${{ needs.preflight.outputs.version_code }}.aab
          path: android/app/build/outputs/bundle/release/*.aab
          retention-days: 30

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: fueki-wallet-${{ needs.preflight.outputs.version }}-${{ needs.preflight.outputs.version_code }}.apk
          path: android/app/build/outputs/apk/release/*-signed.apk
          retention-days: 30

      - name: Generate ProGuard mapping
        if: success()
        working-directory: android
        run: |
          mkdir -p build/mapping
          cp -r app/build/outputs/mapping/release/* build/mapping/ || true

      - name: Upload ProGuard mapping
        uses: actions/upload-artifact@v4
        with:
          name: proguard-mapping-${{ needs.preflight.outputs.version_code }}
          path: android/build/mapping/
          retention-days: 90

  # ========================================
  # Upload to Play Store
  # ========================================
  deploy:
    name: Deploy to Play Store
    runs-on: ubuntu-latest
    needs: [preflight, build]
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: fueki-wallet-${{ needs.preflight.outputs.version }}-${{ needs.preflight.outputs.version_code }}.aab
          path: ./build

      - name: Download ProGuard mapping
        uses: actions/download-artifact@v4
        with:
          name: proguard-mapping-${{ needs.preflight.outputs.version_code }}
          path: ./mapping
        continue-on-error: true

      - name: Setup service account
        env:
          SERVICE_ACCOUNT_JSON: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
        run: |
          echo "$SERVICE_ACCOUNT_JSON" > service-account.json

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service-account.json
          packageName: com.fueki.wallet
          releaseFiles: ./build/*.aab
          track: ${{ needs.preflight.outputs.track }}
          status: completed
          inAppUpdatePriority: 2
          mappingFile: ./mapping/mapping.txt
          whatsNewDirectory: ./fastlane/metadata/android/en-US/changelogs
          changesNotSentForReview: false

      - name: Clean up
        if: always()
        run: |
          rm -f service-account.json
          rm -rf ./build
          rm -rf ./mapping

  # ========================================
  # Create GitHub Release
  # ========================================
  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [preflight, build, deploy]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: fueki-wallet-${{ needs.preflight.outputs.version }}-${{ needs.preflight.outputs.version_code }}.apk
          path: ./release

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            CHANGELOG=$(awk '/^## \[/{if(count==1)exit;count++}count==1' CHANGELOG.md)
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGELOG" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changelog=Bug fixes and improvements" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ needs.preflight.outputs.version }}
          body: |
            ## Fueki Mobile Wallet v${{ needs.preflight.outputs.version }}

            **Build:** ${{ needs.preflight.outputs.version_code }}
            **Track:** ${{ needs.preflight.outputs.track }}

            ### Changes
            ${{ steps.changelog.outputs.changelog }}

            ### Download
            - Android APK available below
            - Available on Google Play Store (${{ needs.preflight.outputs.track }} track)

            ### Verification
            This release has been:
            - Built and signed with official certificates
            - Scanned for security vulnerabilities
            - Tested on multiple Android versions
          files: |
            ./release/*.apk
          draft: false
          prerelease: ${{ needs.preflight.outputs.track != 'production' }}

  # ========================================
  # Notify on Status
  # ========================================
  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: [preflight, build, deploy]
    if: always()

    steps:
      - name: Send success notification
        if: needs.deploy.result == 'success'
        run: |
          echo "Successfully deployed v${{ needs.preflight.outputs.version }} to ${{ needs.preflight.outputs.track }} track"

      - name: Send failure notification
        if: needs.deploy.result == 'failure'
        run: |
          echo "Failed to deploy v${{ needs.preflight.outputs.version }} to ${{ needs.preflight.outputs.track }} track"
          exit 1
