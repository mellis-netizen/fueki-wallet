name: iOS Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'beta'
        type: choice
        options:
          - beta
          - release

env:
  DEVELOPER_DIR: /Applications/Xcode_15.2.app/Contents/Developer

jobs:
  release:
    name: Release to ${{ github.event.inputs.release_type || 'beta' }}
    runs-on: macos-14
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Install fastlane
        run: |
          gem install bundler
          bundle install

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Setup code signing
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        run: |
          bundle exec fastlane ios match_setup type:appstore

      - name: Run tests
        run: bundle exec fastlane ios test

      - name: Build and deploy to TestFlight
        if: github.event.inputs.release_type == 'beta' || github.event.inputs.release_type == ''
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          SLACK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: bundle exec fastlane ios beta

      - name: Build and deploy to App Store
        if: github.event.inputs.release_type == 'release'
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          SLACK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: bundle exec fastlane ios release

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            ios/fastlane/build_output/
            ios/fastlane/logs/
          retention-days: 30

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: ios/fastlane/build_output/*.ipa
          generate_release_notes: true
          draft: false
          prerelease: ${{ github.event.inputs.release_type == 'beta' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'iOS Release Pipeline: ${{ job.status }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  screenshots:
    name: Generate Screenshots
    runs-on: macos-14
    if: github.event.inputs.release_type == 'release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'

      - name: Install dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Install fastlane
        run: |
          gem install bundler
          bundle install

      - name: Generate screenshots
        run: bundle exec fastlane ios screenshots

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: app-store-screenshots
          path: ios/fastlane/screenshots/
          retention-days: 90
