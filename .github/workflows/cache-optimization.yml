name: Build Cache Optimization

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Cache action'
        required: true
        type: choice
        options:
          - clear-all
          - clear-pods
          - clear-deriveddata
          - analyze-cache
  schedule:
    # Weekly cache cleanup on Sundays at 2 AM
    - cron: '0 2 * * 0'

jobs:
  # ========================================
  # Analyze Cache Usage
  # ========================================
  analyze-cache:
    name: Analyze Cache Performance
    runs-on: macos-13
    if: github.event.inputs.action == 'analyze-cache' || github.event_name == 'schedule'
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Analyze CocoaPods cache
        run: |
          echo "üìä CocoaPods Cache Analysis"
          echo "================================"

          if [ -f Podfile.lock ]; then
            POD_COUNT=$(cat Podfile.lock | grep -c "  - ")
            echo "Total Pods: $POD_COUNT"

            if [ -d "Pods" ]; then
              PODS_SIZE=$(du -sh Pods | cut -f1)
              echo "Pods Directory Size: $PODS_SIZE"
            fi
          fi

      - name: Analyze DerivedData patterns
        run: |
          echo "\nüìä DerivedData Analysis"
          echo "================================"

          DERIVED_DATA_PATH=~/Library/Developer/Xcode/DerivedData
          if [ -d "$DERIVED_DATA_PATH" ]; then
            DERIVED_SIZE=$(du -sh "$DERIVED_DATA_PATH" | cut -f1)
            echo "DerivedData Size: $DERIVED_SIZE"

            # Find old build data
            find "$DERIVED_DATA_PATH" -type d -mtime +7 -maxdepth 1 | while read dir; do
              echo "Old build data (>7 days): $(basename "$dir")"
            done
          fi

      - name: Generate cache recommendations
        run: |
          echo "\nüí° Cache Optimization Recommendations"
          echo "================================"

          # Check for commonly cached dependencies
          if [ -f Podfile.lock ]; then
            echo "‚úÖ Podfile.lock found - CocoaPods caching enabled"
          fi

          # Check for Swift Package Manager
          if [ -f Package.resolved ]; then
            echo "‚úÖ Package.resolved found - SPM caching possible"
          fi

          # Recommend cache strategies
          echo "\nüìù Suggested Cache Keys:"
          echo "CocoaPods: \${{ runner.os }}-pods-\${{ hashFiles('**/Podfile.lock') }}"
          echo "DerivedData: \${{ runner.os }}-deriveddata-\${{ hashFiles('**/*.xcodeproj') }}"
          echo "SPM: \${{ runner.os }}-spm-\${{ hashFiles('**/Package.resolved') }}"

  # ========================================
  # Clear Cache Operations
  # ========================================
  clear-cache:
    name: Clear Build Caches
    runs-on: macos-13
    if: github.event.inputs.action != 'analyze-cache' || github.event_name == 'schedule'
    timeout-minutes: 10

    steps:
      - name: Clear CocoaPods cache
        if: github.event.inputs.action == 'clear-pods' || github.event.inputs.action == 'clear-all'
        run: |
          echo "üóëÔ∏è  Clearing CocoaPods cache..."
          rm -rf ~/Library/Caches/CocoaPods
          pod cache clean --all
          echo "‚úÖ CocoaPods cache cleared"

      - name: Clear DerivedData
        if: github.event.inputs.action == 'clear-deriveddata' || github.event.inputs.action == 'clear-all'
        run: |
          echo "üóëÔ∏è  Clearing DerivedData..."
          rm -rf ~/Library/Developer/Xcode/DerivedData
          echo "‚úÖ DerivedData cleared"

      - name: Clear GitHub Actions cache
        if: github.event.inputs.action == 'clear-all'
        uses: actions/github-script@v7
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })

            for (const cache of caches.data.actions_caches) {
              console.log(`Deleting cache: ${cache.key}`)
              await github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }

            console.log('‚úÖ All GitHub Actions caches cleared')

  # ========================================
  # Cache Warmup
  # ========================================
  warmup-cache:
    name: Warm Up Build Caches
    runs-on: macos-13
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'

      - name: Warm up CocoaPods cache
        uses: actions/cache@v4
        with:
          path: Pods
          key: ${{ runner.os }}-pods-warmup-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-warmup-
            ${{ runner.os }}-pods-

      - name: Install pods
        run: |
          if [ -f Podfile ]; then
            echo "üì¶ Installing CocoaPods dependencies..."
            pod install --repo-update
            echo "‚úÖ Pods installed and cached"
          fi

      - name: Warm up DerivedData cache
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-deriveddata-warmup-${{ hashFiles('**/*.xcodeproj') }}-${{ hashFiles('**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-deriveddata-warmup-${{ hashFiles('**/*.xcodeproj') }}-
            ${{ runner.os }}-deriveddata-warmup-

      - name: Build for cache warmup
        run: |
          echo "üî® Building project to warm up caches..."
          xcodebuild build \
            -workspace FuekiWallet.xcworkspace \
            -scheme FuekiWallet \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.0' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            | xcpretty

          echo "‚úÖ Build completed, caches warmed up"
